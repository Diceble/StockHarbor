// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockHarbor.Infrastructure.Persistance;

#nullable disable

namespace StockHarbor.Domain.Migrations
{
    [DbContext(typeof(StockHarborDatabaseContext))]
    [Migration("20250704162306_EditProductAddProperties")]
    partial class EditProductAddProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockHarbor.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductType")
                        .HasColumnType("integer");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StockHarbor.Domain.Entities.Product", b =>
                {
                    b.OwnsOne("StockHarbor.Domain.Entities.Dimension", "Dimension", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("integer");

                            b1.Property<int>("Height")
                                .HasColumnType("integer")
                                .HasColumnName("Dimension_Height");

                            b1.Property<int>("Length")
                                .HasColumnType("integer")
                                .HasColumnName("Dimension_Length");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Dimension_Unit");

                            b1.Property<int>("Width")
                                .HasColumnType("integer")
                                .HasColumnName("Dimension_Width");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Dimension");
                });
#pragma warning restore 612, 618
        }
    }
}
